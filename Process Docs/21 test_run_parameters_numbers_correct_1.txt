Here's the failing test:
	#Tests the run command with valid parameters and numbers. Also makes it quit
    def test_run_parameters_numbers_correct_1(self):
        #create a calculator
        calc = minidc()
        #redirect stdout to something we can read
        stdout_temp = sys.stdout
        out = StringIO.StringIO()
        sys.stdout = out

        try:
            #run a bunch of valid commands
            commands = StringIO.StringIO('3 4+p\nq\n')
            calc.run(commands=commands.readline)
            #get the value printed
            printed = out.getvalue()
        finally:
            #restore stdout
            sys.stdout = stdout_temp
        self.assertEqual(printed, "$ 7\n$ ")
Here's the test failing:
	#Tests the run command with valid parameters and numbers. Also makes it quit
    def test_run_parameters_numbers_correct_1(self):
        #create a calculator
        calc = minidc()
        #redirect stdout to something we can read
        stdout_temp = sys.stdout
        out = StringIO.StringIO()
        sys.stdout = out

        try:
            #run a bunch of valid commands
            commands = StringIO.StringIO('3 4+p\nq\n')
            calc.run(commands=commands.readline)
            #get the value printed
            printed = out.getvalue()
        finally:
            #restore stdout
            sys.stdout = stdout_temp
        self.assertEqual(printed, "$ 7\n$ ")
Here's the code that passes the test:
	#continually run commands until q (for quit) is entered
    def run(self, commands=sys.stdin.readline):
        sys.stdout.write('$ ')
        instruction = commands()
        while instruction != 'q\n':
            self.execute_line(instruction)
            sys.stdout.write('$ ')
            instruction = commands()
Here's the test passing:
	test_add_domain_correct (__main__.test_minidc) ... ok
	test_add_domain_incorrect (__main__.test_minidc) ... ok
	test_command_f_domain_correct (__main__.test_minidc) ... ok
	test_command_f_domain_incorrect (__main__.test_minidc) ... ok
	test_command_n_domain_correct (__main__.test_minidc) ... ok
	test_command_n_domain_incorrect (__main__.test_minidc) ... ok
	test_command_p_domain_correct (__main__.test_minidc) ... ok
	test_command_p_domain_incorrect (__main__.test_minidc) ... ok
	test_divide_domain_correct (__main__.test_minidc) ... ok
	test_divide_domain_incorrect_1 (__main__.test_minidc) ... ok
	test_divide_domain_incorrect_2 (__main__.test_minidc) ... ok
	test_execute_line_input_correct_1 (__main__.test_minidc) ... ok
	test_execute_line_input_correct_2 (__main__.test_minidc) ... ok
	test_execute_line_input_correct_3 (__main__.test_minidc) ... ok
	test_execute_line_input_incorrect_1 (__main__.test_minidc) ... ok
	test_multiply_domain_correct (__main__.test_minidc) ... ok
	test_multiply_domain_incorrect (__main__.test_minidc) ... ok
	test_push_number_domain_correct (__main__.test_minidc) ... ok
	test_run_parameters_numbers_correct_1 (__main__.test_minidc) ... ok
	test_subtract_domain_correct (__main__.test_minidc) ... ok
	test_subtract_domain_incorrect (__main__.test_minidc) ... ok
	----------------------------------------------------------------------
	Ran 21 tests in 0.003s
	OK